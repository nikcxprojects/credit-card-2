name: Build
on: workflow_dispatch

jobs:

    Archiving:
      runs-on: ubuntu-latest
      needs: [Compile_APK, Compile_AAB]
      steps:
        - uses: actions/checkout@v2
        
        - uses: actions/download-artifact@v2
          with:
             name: ${{ secrets.APP_NAME }}.apk
             path: app/build/outputs/apk/debug/
             
        - uses: actions/download-artifact@v2
          with:
             name: ${{ secrets.APP_NAME }}.aab
             path: app/build/outputs/bundle/release/
          
        - uses: vimtor/action-zip@v1
          with:
            files: app/build/outputs/apk/debug/ app/build/outputs/bundle/release/
            dest: ${{ secrets.APP_NAME }}.zip
            
        - uses: actions/upload-artifact@v1
          with:
           name: ${{ secrets.APP_NAME }}
           path: ${{ github.workspace }}/${{ secrets.APP_NAME }}.zip

    #SendTelegramNotify:
      #runs-on: ubuntu-latest
      #needs: DeployToDrive
      #name: Send Telegram Notify
      #steps: 
         #- name: send telegram message
           #uses: appleboy/telegram-action@master
           #with:
              #to: ${{ secrets.TELEGRAM_ID }}
              #token: ${{ secrets.TELEGRAM_TOKEN }}
              #message: âœ… ${{ secrets.APP_NAME }} https://drive.google.com/drive/u/7/folders/${{ secrets.folderId }}

    DeployToDrive:
      runs-on: ubuntu-latest
      needs: [Archiving]
      name: Deploy to Google Drive
      steps:
      
      - name: Checkout code
        uses: actions/checkout@v2
          
      - uses: actions/download-artifact@v2
        with:
          name: ${{ secrets.APP_NAME }}
          path: ${{ github.workspace }}/${{ secrets.APP_NAME }}.zip
          
      - name: Upload to google drive APK
        uses: adityak74/google-drive-upload-git-action@v0.2
        with:
          credentials: ${{ secrets.credentials }}
          filename: "/${{ secrets.APP_NAME }}.zip"
          folderId: ${{ secrets.folderId }}
          name: ${{ secrets.APP_NAME }}.zip
          overwrite: "true" # optional boolean
                
    Compile_APK:
      runs-on: ubuntu-latest
      
      steps:
         - uses: actions/checkout@v2
           name: Checkout project
           
         - uses: actions/setup-java@v2
           name: Set up JDK
           with:
                java-version: '11'
                distribution: 'adopt'
                cache: gradle
    
         - uses: actions/cache@v2
           name: Caching Gradle
           with:
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
           
         - name: Grant execute permission for gradlew
           run: chmod +x gradlew
           
         - name: Build APK
           run: ./gradlew assembleDebug
           
         - name: Upload APK
           uses: actions/upload-artifact@v2
           with:
                name: ${{ secrets.APP_NAME }}.apk
                path: app/build/outputs/apk/debug/
                
    Compile_AAB:
      runs-on: ubuntu-latest
      
      steps:
         - uses: actions/checkout@v2
           name: Checkout project
           
         - uses: actions/setup-java@v2
           name: Set up JDK
           with:
                java-version: '11'
                distribution: 'adopt'
                cache: gradle
    
         - uses: actions/cache@v2
           name: Caching Gradle
           with:
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
           
         - name: Grant execute permission for gradlew
           run: chmod +x gradlew
           
         - name: Build Release Bundle
           run: ./gradlew bundle
         - uses: r0adkll/sign-android-release@v1
         
           name: Sign Bundle
           id: sign_app
           with:
                releaseDirectory: app/build/outputs/bundle/release
                signingKeyBase64: ${{ secrets.SIGNING_KEY }}
                alias: ${{ secrets.ALIAS }}
                keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
           
         - name: Upload AAB
           uses: actions/upload-artifact@v2
           with:
                name: ${{ secrets.APP_NAME }}.aab
                path: ${{steps.sign_app.outputs.signedReleaseFile}}
